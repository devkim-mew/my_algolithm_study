"""
메모리가 초기화 됨
원래 메모리의 값을 알고 있음
메모리 bit 중 하나를 골라 0인지 1인지 결정하면 해당 값이 메모리의 끝까지 덮어씌워짐
모든 메모리가 0인 상태에서 원래 메모리로 복구하는데 몇번이나 고쳐야 하는지 구해보자

메모리 길이는  1~50

입력
T 테스트 테이스
memory = 원래 메모리

어떻게 구할까?
원래의 메모리가 바뀔 때마다 카운팅을 해주면 될 듯
1. 메모리 값을 받아오고
2. 기준이 되는 기본값을 0으로 두고
3. 순회했을 떄 1이 나올 경우 카운팅을 하고 기본값을 1로 바꾼다
4. 이를 반복하며 끝까지 순회
"""

import sys
sys.stdin = open("input.txt", "r")

T = int(input())
for tc in range(1, T + 1):
    memory = input()            # 메모리를 받고
    change = 0                  # 바뀌는 횟수 세팅
    one = '0'                   # 초기 탐지 세팅, 0일떄는 일단 안 바꾸니 0과 다를 떄 부터 구해야 함

    for bit in memory:          # 메모리를 돌림
        if bit != one:          # 만약 1이라면
            change += 1         # 바뀌는 횟수 +
            one = bit           # 전부 1로 바뀌니 다시 0일 떄를 찾아야 하니 0,1 체인지

    print(f"#{tc} {change}")